name: Docker Build and Publish

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./platform
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build Docker Compose services
      run: docker compose build
      
    - name: Start services
      run: docker compose up -d
      
    - name: Wait for services to be ready
      run: |
        echo "Waiting for MongoDB to be ready..."
        timeout 60 bash -c 'until docker exec mongodb mongosh --eval "db.adminCommand(\"ping\")" --quiet; do sleep 2; done'
        
        echo "Waiting for Next.js app to be ready..."
        timeout 60 bash -c 'until curl -f http://localhost:3000/; do sleep 2; done'
      
    - name: Run health checks
      run: |
        docker compose ps
        curl -f http://localhost:3000/ || exit 1
        
    - name: Stop services
      run: docker compose down